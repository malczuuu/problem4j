apply plugin: "java-library"
apply plugin: "maven-publish"
apply plugin: "com.github.sherter.google-java-format"

sourceCompatibility = "17"

repositories {
    mavenCentral()
}

dependencies {
    compileOnly("org.springframework:spring-webmvc:6.0.0")
    compileOnly("org.springframework.boot:spring-boot-autoconfigure:3.0.0")
    compileOnly("org.springframework.boot:spring-boot-configuration-processor:3.0.0")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor:3.0.0")
    compileOnly("jakarta.servlet:jakarta.servlet-api:6.0.0")

    api("org.slf4j:slf4j-api:2.0.0")
    api project(":problem4j-jackson")

    testRuntimeOnly("jakarta.servlet:jakarta.servlet-api:6.0.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.9.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.2")

    testImplementation("org.springframework.boot:spring-boot-starter-test:3.0.0") {
        exclude group: "junit", module: "junit"
    }
}

compileJava.dependsOn(processResources)

tasks.named("test") {
    useJUnitPlatform()
}

tasks.register('sourcesJar', Jar) {
    dependsOn classes
    archiveAppendix = "sources"
    from sourceSets.main.allSource
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveAppendix = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

googleJavaFormat {
    toolVersion = "1.16.0"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
